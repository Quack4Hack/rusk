import { describe, expect, it } from "vitest";
import { apiNodeLocations } from "$lib/mock-data";
import { addCountAndUnique } from "..";

describe("addCountAndUnique", () => {
  it("should return an array of unique objects, sorted by the frequency of their occurrence, with an additional count property representing the number of times that city-country combination appeared", () => {
    const expectedResult = [
      {
        city: "North Bergen",
        count: 15,
        country: "United States",
        countryCode: "US",
        lat: 40.793,
        lon: -74.0247,
      },
      {
        city: "Amsterdam",
        count: 15,
        country: "The Netherlands",
        countryCode: "NL",
        lat: 52.352,
        lon: 4.9392,
      },
      {
        city: "Santa Clara",
        count: 11,
        country: "United States",
        countryCode: "US",
        lat: 37.3931,
        lon: -121.962,
      },
      {
        city: "Frankfurt am Main",
        count: 9,
        country: "Germany",
        countryCode: "DE",
        lat: 50.1169,
        lon: 8.6837,
      },
      {
        city: "Clifton",
        count: 9,
        country: "United States",
        countryCode: "US",
        lat: 40.8364,
        lon: -74.1403,
      },
      {
        city: "Portsmouth",
        count: 6,
        country: "United Kingdom",
        countryCode: "GB",
        lat: 50.8544,
        lon: -1.002,
      },
      {
        city: "Singapore",
        count: 5,
        country: "Singapore",
        countryCode: "SG",
        lat: 1.32123,
        lon: 103.695,
      },
      {
        city: "Nuremberg",
        count: 4,
        country: "Germany",
        countryCode: "DE",
        lat: 49.405,
        lon: 11.1617,
      },
      {
        city: "Helsinki",
        count: 2,
        country: "Finland",
        countryCode: "FI",
        lat: 60.1797,
        lon: 24.9344,
      },
      {
        city: "Alexandria",
        count: 1,
        country: "Australia",
        countryCode: "AU",
        lat: -33.9088,
        lon: 151.196,
      },
      {
        city: "Milan",
        count: 1,
        country: "Italy",
        countryCode: "IT",
        lat: 45.4722,
        lon: 9.1922,
      },
      {
        city: "Sydney",
        count: 1,
        country: "Australia",
        countryCode: "AU",
        lat: -33.808,
        lon: 151.1415,
      },
      {
        city: "Hillsboro",
        count: 1,
        country: "United States",
        countryCode: "US",
        lat: 45.5397,
        lon: -122.9638,
      },
      {
        city: "St Louis",
        count: 1,
        country: "United States",
        countryCode: "US",
        lat: 38.6364,
        lon: -90.1985,
      },
      {
        city: "Slough",
        count: 1,
        country: "United Kingdom",
        countryCode: "GB",
        lat: 51.5368,
        lon: -0.6718,
      },
      {
        city: "Seattle",
        count: 1,
        country: "United States",
        countryCode: "US",
        lat: 47.3066,
        lon: -122.2619,
      },
      {
        city: "Limerick",
        count: 1,
        country: "Ireland",
        countryCode: "IE",
        lat: 52.6669,
        lon: -8.6274,
      },
      {
        city: "Falkenstein",
        count: 1,
        country: "Germany",
        countryCode: "DE",
        lat: 50.4777,
        lon: 12.3649,
      },
      {
        city: "Paris",
        count: 1,
        country: "France",
        countryCode: "FR",
        lat: 48.8323,
        lon: 2.4075,
      },
      {
        city: "Newcastle upon Tyne",
        count: 1,
        country: "United Kingdom",
        countryCode: "GB",
        lat: 54.9958,
        lon: -1.6897,
      },
      {
        city: "Sneek",
        count: 1,
        country: "The Netherlands",
        countryCode: "NL",
        lat: 53.0366,
        lon: 5.6858,
      },
    ];

    expect(addCountAndUnique(apiNodeLocations)).toStrictEqual(expectedResult);
  });
});
